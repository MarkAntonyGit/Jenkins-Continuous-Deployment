---
- name: "Continous Deployment - Ansible for offloading and adding instances to load balancer" 
  hosts: localhost
  vars_files:
    - autoscaling_vars.yml 
  tasks:

    - name: "AWS - Gather information about instances created with ASG"
      ec2_instance_info:
        region: "{{ region }}"      
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        filters: 
          "tag:Name": CD-Project-ASG
          instance-state-name: [ "running"] 
      register: asg_instance 

    
    - name: "Creating Dynamic Inventory for  ASG Instances"
      add_host:
        name: "{{ item.public_ip_address }}"
        groups: "asg"
        ansible_host: "{{ item.public_ip_address }}"
        ansible_port: 22
        ansible_user: "ec2-user"
        ansible_ssh_private_key_file: "/var/Continous_Deployment_Project/{{ key_name }}.pem" 
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      with_items:
        - "{{ asg_instance.instances }}"

       
- name: "CD - Offloading and adding EC2"
  hosts: asg 
  become: true 
  serial: 1 
  gather_facts: False
  vars_files:
    - autoscaling_vars.yml  
  tasks:
  
    - name: "EC2 - Cloning Git Application"
      git: 
        repo: "{{ git_url }}"
        dest: /var/www/website_template/
      register: git_status

    - name: "EC2 - Disabling Health Check"
      when: git_status.changed == true
      file: 
        path: /var/www/html/health.html
        state: touch 
        mode: 0000

    - name: "EC2 - Off loading from Load Balancer" 
      when: git_status.changed == true
      pause:
        seconds: "{{ health_time }}"   

    - name: "EC2 - Updating Application"
      when: git_status.changed == true
      copy:
        src: /var/www/website_template/
        dest: /var/www/html/
        owner: apache
        group: apache
        remote_src: true
            
    - name: "EC2 - Application Updation - Enabling Health Check"
      when: git_status.changed == true
      file:
        path: /var/www/html/health.html
        state: touch
        mode: 0444

    - name: "EC2 - Restart httpd" 
      service:
        name: httpd
        state: restarted         
            
    - name: "EC2 - Application Updation - Loading EC2 To ELB"
      when: git_status.changed == true
      pause:
        seconds: "{{ health_time }}" 
